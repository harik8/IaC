---
apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: default
spec:
  template:
    spec:
      # terminationGracePeriod: 120m
      requirements:
        - key: kubernetes.io/arch
          operator: In
          values: ["amd64"]
        - key: kubernetes.io/os
          operator: In
          values: ["linux"]
        - key: karpenter.sh/capacity-type
          operator: In
          values: ["spot"]
        - key: karpenter.k8s.aws/instance-category
          operator: In
          values: ["t","c", "m", "r"]
        - key: karpenter.k8s.aws/instance-generation
          operator: Gt
          values: ["2"]
      nodeClassRef:
        apiVersion: karpenter.k8s.aws/v1beta1
        kind: EC2NodeClass
        name: default
  limits:
    cpu: 1000
  disruption:
    consolidationPolicy: WhenUnderutilized
    expireAfter: 3m # 30 * 24h = 720h
    budgets:
    - nodes: "20%"
---
apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: default
spec:
  amiFamily: AL2 # Amazon Linux 2
  role: "acb-eun1-sandbox-eks-KarpenterNodeInstanceProfile" # replace with your cluster name
  subnetSelectorTerms:
    - tags:
        karpenter.sh/discovery: "acb-eun1-sandbox-eks" # replace with your cluster name
  securityGroupSelectorTerms:
    - tags:
        karpenter.sh/discovery: "acb-eun1-sandbox-eks" # replace with your cluster name
  blockDeviceMappings:
    - deviceName: /dev/xvda
      ebs:
        volumeSize: 8Gi
        volumeType: gp3
        iops: 100
        encrypted: false
        deleteOnTermination: true
        throughput: 125
